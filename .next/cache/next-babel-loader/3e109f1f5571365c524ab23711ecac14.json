{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/lucasbertolo/Desktop/projects/portaldavila/portal/src/components/AreaUser/PropertyManagement.jsx\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport fetch from 'isomorphic-fetch';\n\nvar PropertyManagement =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PropertyManagement, _React$Component);\n\n  function PropertyManagement(props) {\n    var _this;\n\n    _classCallCheck(this, PropertyManagement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PropertyManagement).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getNeighborhoodList\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:8000/neighborhood').then(function (res) {\n                return res.json();\n              }).then(function (list) {\n                if (list) {\n                  _this.setState({\n                    neighborhood: list\n                  });\n                }\n              })[\"catch\"](function (err) {\n                return console.log(err);\n              });\n\n            case 2:\n              result = _context.sent;\n              return _context.abrupt(\"return\", result);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _this.state = {\n      data: props.data,\n      neighborhood: []\n    };\n    return _this;\n  }\n\n  _createClass(PropertyManagement, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getNeighborhoodList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var neighborhood = this.state.neighborhood;\n      return __jsx(\"form\", {\n        method: \"\",\n        action: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Inserir Propriedade\"), __jsx(Input, {\n        hasLabel: true,\n        htmlFor: \"textInput\",\n        label: \"Text input\",\n        required: true,\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), __jsx(Input, {\n        hasLabel: true,\n        htmlFor: \"emailInput\",\n        label: \"Email input\",\n        required: true,\n        type: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), __jsx(Input, {\n        hasLabel: true,\n        htmlFor: \"numberInput\",\n        label: \"Number input\",\n        required: true,\n        type: \"number\",\n        min: \"0.5\",\n        max: \"100\",\n        step: \"0.5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), __jsx(Input, {\n        hasLabel: true,\n        htmlFor: \"passwordInput\",\n        label: \"Password input\",\n        required: true,\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), __jsx(Select, {\n        hasLabel: true,\n        htmlFor: \"select\",\n        label: \"Select\",\n        options: neighborhood,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), __jsx(Datalist, {\n        hasLabel: true,\n        htmlFor: \"datalist\",\n        label: \"Datalist\",\n        options: \"Chrome, Edge, Firefox, Internet Explorer, Opera, Safari, Vivaldi\",\n        required: true,\n        keyid: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), __jsx(Textarea, {\n        hasLabel: true,\n        htmlFor: \"textarea\",\n        label: \"Textarea\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), __jsx(Checkbox, {\n        hasLabel: true,\n        htmlFor: \"checkbox\",\n        label: \"Checkbox\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), __jsx(Radio, {\n        hasLabel: true,\n        htmlFor: \"radioOne\",\n        label: \"Radio one\",\n        name: \"radios\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), __jsx(Radio, {\n        hasLabel: true,\n        htmlFor: \"radioTwo\",\n        label: \"Radio two\",\n        name: \"radios\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), __jsx(Button, {\n        type: \"submit\",\n        value: \"submit\",\n        text: \"Send form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PropertyManagement;\n}(React.Component);\n\nvar Button = function Button(props) {\n  var type = props.type,\n      value = props.value,\n      text = props.text;\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    type: type || 'button',\n    value: value || null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, text));\n};\n\nvar Datalist = function Datalist(props) {\n  var options = props.options,\n      hasLabel = props.hasLabel,\n      htmlFor = props.htmlFor,\n      label = props.label,\n      name = props.name,\n      required = props.required,\n      keyid = props.keyid;\n  var dataOptions = options.split(', '); // eslint-disable-next-line jsx-a11y/control-has-associated-label\n\n  var dataOptionsList = dataOptions.map(function (dataOption, index) {\n    return __jsx(\"option\", {\n      key: \"\".concat(keyid).concat(index),\n      value: dataOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    });\n  });\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(Label, {\n    hasLabel: hasLabel,\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    list: htmlFor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), __jsx(\"datalist\", {\n    defaultValue: \"\",\n    id: htmlFor,\n    name: name || null,\n    required: required || null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Select one option\"), dataOptionsList));\n};\n\nvar Checkbox = function Checkbox(props) {\n  var htmlFor = props.htmlFor,\n      label = props.label,\n      name = props.name,\n      required = props.required;\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: htmlFor,\n    name: name || null,\n    required: required || null,\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), label));\n};\n\nvar Label = function Label(props) {\n  var hasLabel = props.hasLabel,\n      label = props.label,\n      htmlFor = props.htmlFor;\n\n  if (hasLabel === 'true') {\n    return __jsx(\"label\", {\n      htmlFor: htmlFor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, label);\n  }\n\n  return null;\n};\n\nvar Input = function Input(props) {\n  var htmlFor = props.htmlFor,\n      label = props.label,\n      name = props.name,\n      required = props.required,\n      hasLabel = props.hasLabel,\n      max = props.max,\n      min = props.min,\n      placeholder = props.placeholder,\n      step = props.step,\n      type = props.type;\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, __jsx(Label, {\n    hasLabel: hasLabel,\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    id: htmlFor,\n    max: max || null,\n    min: min || null,\n    name: name || null,\n    placeholder: placeholder || null,\n    required: required || null,\n    step: step || null,\n    type: type || 'text',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }));\n};\n\nvar Radio = function Radio(props) {\n  var htmlFor = props.htmlFor,\n      label = props.label,\n      name = props.name,\n      required = props.required;\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: htmlFor,\n    name: name || null,\n    required: required || null,\n    type: \"radio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }), label));\n};\n\nvar Select = function Select(props) {\n  var hasLabel = props.hasLabel,\n      htmlFor = props.htmlFor,\n      label = props.label,\n      name = props.name,\n      required = props.required,\n      options = props.options;\n  var arrayOptions = options.map(function (item) {\n    return item.name;\n  }); // eslint-disable-next-line max-len\n\n  var selectOptionsList = arrayOptions.map(function (option, index) {\n    return __jsx(\"option\", {\n      key: option,\n      value: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, option);\n  });\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, __jsx(Label, {\n    hasLabel: hasLabel,\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }), __jsx(\"select\", {\n    defaultValue: \"\",\n    id: htmlFor,\n    name: name || null,\n    required: required || null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, \"Escolha um bairro\"), selectOptionsList));\n};\n\nvar Textarea = function Textarea(props) {\n  var hasLabel = props.hasLabel,\n      htmlFor = props.htmlFor,\n      label = props.label,\n      cols = props.cols,\n      name = props.name,\n      required = props.required,\n      rows = props.rows;\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, __jsx(Label, {\n    hasLabel: hasLabel,\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }), __jsx(\"textarea\", {\n    cols: cols || null,\n    id: htmlFor,\n    name: name || null,\n    required: required || null,\n    rows: rows || null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }));\n};\n\nexport default PropertyManagement;","map":{"version":3,"sources":["/Users/lucasbertolo/Desktop/projects/portaldavila/portal/src/components/AreaUser/PropertyManagement.jsx"],"names":["React","fetch","PropertyManagement","props","then","res","json","list","setState","neighborhood","err","console","log","result","state","data","getNeighborhoodList","Component","Button","type","value","text","Datalist","options","hasLabel","htmlFor","label","name","required","keyid","dataOptions","split","dataOptionsList","map","dataOption","index","Checkbox","Label","Input","max","min","placeholder","step","Radio","Select","arrayOptions","item","selectOptionsList","option","Textarea","cols","rows"],"mappings":"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","sourcesContent":["/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport fetch from 'isomorphic-fetch';\n\nclass PropertyManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.data,\n      neighborhood: [],\n    };\n  }\n\n\n  componentDidMount() {\n    this.getNeighborhoodList();\n  }\n\n  getNeighborhoodList = async () => {\n    const result = await fetch('http://localhost:8000/neighborhood')\n      .then((res) => res.json())\n      .then((list) => {\n        if (list) {\n          this.setState({ neighborhood: list });\n        }\n      })\n      .catch((err) => console.log(err));\n\n    return result;\n  }\n\n  render() {\n    const {\n      neighborhood,\n    } = this.state;\n\n    return (\n      <form method=\"\" action=\"\">\n        <h2>Inserir Propriedade</h2>\n        <Input\n          hasLabel\n          htmlFor=\"textInput\"\n          label=\"Text input\"\n          required\n          type=\"text\"\n        />\n\n        <Input\n          hasLabel\n          htmlFor=\"emailInput\"\n          label=\"Email input\"\n          required\n          type=\"email\"\n        />\n\n        <Input\n          hasLabel\n          htmlFor=\"numberInput\"\n          label=\"Number input\"\n          required\n          type=\"number\"\n          min=\"0.5\"\n          max=\"100\"\n          step=\"0.5\"\n        />\n\n        <Input\n          hasLabel\n          htmlFor=\"passwordInput\"\n          label=\"Password input\"\n          required\n          type=\"password\"\n        />\n        <Select\n          hasLabel\n          htmlFor=\"select\"\n          label=\"Select\"\n          options={neighborhood}\n        />\n\n        <Datalist\n          hasLabel\n          htmlFor=\"datalist\"\n          label=\"Datalist\"\n          options=\"Chrome, Edge, Firefox, Internet Explorer, Opera, Safari, Vivaldi\"\n          required\n          keyid=\"id\"\n        />\n\n        <Textarea\n          hasLabel\n          htmlFor=\"textarea\"\n          label=\"Textarea\"\n          required\n        />\n\n        <Checkbox\n          hasLabel\n          htmlFor=\"checkbox\"\n          label=\"Checkbox\"\n          required\n        />\n\n        <Radio\n          hasLabel\n          htmlFor=\"radioOne\"\n          label=\"Radio one\"\n          name=\"radios\"\n          required\n        />\n\n        <Radio\n          hasLabel\n          htmlFor=\"radioTwo\"\n          label=\"Radio two\"\n          name=\"radios\"\n          required\n        />\n\n        <Button\n          type=\"submit\"\n          value=\"submit\"\n          text=\"Send form\"\n        />\n      </form>\n    );\n  }\n}\n\nconst Button = (props) => {\n  const {\n    type,\n    value,\n    text,\n  } = props;\n\n  return (\n    <fieldset>\n      <button\n        type={type || 'button'}\n        value={value || null}\n      >\n        {text}\n      </button>\n    </fieldset>\n  );\n};\n\nconst Datalist = (props) => {\n  const {\n    options,\n    hasLabel,\n    htmlFor,\n    label,\n    name,\n    required,\n    keyid,\n  } = props;\n\n  const dataOptions = options.split(', ');\n\n  // eslint-disable-next-line jsx-a11y/control-has-associated-label\n  const dataOptionsList = dataOptions.map((dataOption, index) => <option key={`${keyid}${index}`} value={dataOption} />);\n\n  return (\n    <fieldset>\n      <Label\n        hasLabel={hasLabel}\n        htmlFor={htmlFor}\n        label={label}\n      />\n\n      <input list={htmlFor} />\n\n      <datalist\n        defaultValue=\"\"\n        id={htmlFor}\n        name={name || null}\n        required={required || null}\n      >\n        <option value=\"\" disabled>Select one option</option>\n\n        {dataOptionsList}\n      </datalist>\n    </fieldset>\n  );\n};\n\nconst Checkbox = (props) => {\n  const {\n    htmlFor,\n    label,\n    name,\n    required,\n  } = props;\n\n  return (\n    <fieldset>\n      <label\n        htmlFor={htmlFor}\n        label={label}\n      >\n        <input\n          id={htmlFor}\n          name={name || null}\n          required={required || null}\n          type=\"checkbox\"\n        />\n        {label}\n      </label>\n    </fieldset>\n  );\n};\n\nconst Label = (props) => {\n  const {\n    hasLabel,\n    label,\n    htmlFor,\n  } = props;\n\n  if (hasLabel === 'true') {\n    return <label htmlFor={htmlFor}>{label}</label>;\n  }\n\n  return null;\n};\n\nconst Input = (props) => {\n  const {\n    htmlFor,\n    label,\n    name,\n    required,\n    hasLabel,\n    max,\n    min,\n    placeholder,\n    step,\n    type,\n  } = props;\n\n  return (\n    <fieldset>\n      <Label\n        hasLabel={hasLabel}\n        htmlFor={htmlFor}\n        label={label}\n      />\n\n      <input\n        id={htmlFor}\n        max={max || null}\n        min={min || null}\n        name={name || null}\n        placeholder={placeholder || null}\n        required={required || null}\n        step={step || null}\n        type={type || 'text'}\n      />\n    </fieldset>\n  );\n};\n\nconst Radio = (props) => {\n  const {\n    htmlFor,\n    label,\n    name,\n    required,\n  } = props;\n\n  return (\n    <fieldset>\n      <label\n        htmlFor={htmlFor}\n        label={label}\n      >\n        <input\n          id={htmlFor}\n          name={name || null}\n          required={required || null}\n          type=\"radio\"\n        />\n        {label}\n      </label>\n    </fieldset>\n  );\n};\n\n\nconst Select = (props) => {\n  const {\n    hasLabel,\n    htmlFor,\n    label,\n    name,\n    required,\n    options,\n  } = props;\n\n  const arrayOptions = options.map((item) => item.name);\n\n  // eslint-disable-next-line max-len\n  const selectOptionsList = arrayOptions.map((option, index) => <option key={option} value={index}>{option}</option>);\n\n  return (\n    <fieldset>\n      <Label\n        hasLabel={hasLabel}\n        htmlFor={htmlFor}\n        label={label}\n      />\n\n      <select\n        defaultValue=\"\"\n        id={htmlFor}\n        name={name || null}\n        required={required || null}\n      >\n        <option value=\"\" disabled>Escolha um bairro</option>\n\n        {selectOptionsList}\n      </select>\n    </fieldset>\n  );\n};\n\nconst Textarea = (props) => {\n  const {\n    hasLabel,\n    htmlFor,\n    label,\n    cols,\n    name,\n    required,\n    rows,\n  } = props;\n\n  return (\n    <fieldset>\n      <Label\n        hasLabel={hasLabel}\n        htmlFor={htmlFor}\n        label={label}\n      />\n\n      <textarea\n        cols={cols || null}\n        id={htmlFor}\n        name={name || null}\n        required={required || null}\n        rows={rows || null}\n      />\n    </fieldset>\n  );\n};\n\n\nexport default PropertyManagement;\n"]},"metadata":{},"sourceType":"module"}