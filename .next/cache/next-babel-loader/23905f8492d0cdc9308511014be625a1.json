{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/lucasbertolo/Desktop/projects/portaldavila/portal/src/components/AreaUser/PropertyManagement.jsx\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport fetch from 'isomorphic-fetch';\nimport enums from '../../enums';\n\nvar PropertyManagement =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PropertyManagement, _React$Component);\n\n  function PropertyManagement(props) {\n    var _this;\n\n    _classCallCheck(this, PropertyManagement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PropertyManagement).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getNeighborhoodList\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:8000/neighborhood').then(function (res) {\n                return res.json();\n              }).then(function (list) {\n                if (list) {\n                  _this.setState({\n                    neighborhood: list\n                  });\n                }\n              })[\"catch\"](function () {\n                return _this.setState({\n                  sendStatus: 'Erro ao encontrar lista de bairros'\n                });\n              });\n\n            case 2:\n              result = _context.sent;\n              return _context.abrupt(\"return\", result);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"getTypeList\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('http://localhost:8000/typeproperty').then(function (res) {\n                return res.json();\n              }).then(function (list) {\n                if (list) {\n                  _this.setState({\n                    type: list\n                  });\n                }\n              })[\"catch\"](function () {\n                return _this.setState({\n                  sendStatus: 'Erro ao encontrar lista de tipos'\n                });\n              });\n\n            case 2:\n              result = _context2.sent;\n              return _context2.abrupt(\"return\", result);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function () {\n      var selectBlock = document.getElementById('neighborhood-list').value;\n      var selectType = document.getElementById('property-type').value;\n      var purpose = document.querySelector('input[name=\"purpose\"]:checked').value;\n      var price = document.getElementById('price').value; // Validar se campos estao preenchidos\n\n      _this.setState({\n        sendStatus: 'Enviando ...'\n      });\n\n      fetch('https://dry-island-26655.herokuapp.com/contactLMS', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          neighborhood_id: Number(selectBlock) + 1,\n          type_id: Number(selectType) + 1,\n          purpose_id: purpose,\n          price: price,\n          creator_id: 1\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (message) {\n        if (message) {\n          _this.setState({\n            sendStatus: 'Enviada com sucesso'\n          });\n        }\n      })[\"catch\"](function (err) {\n        _this.setState({\n          sendStatus: 'Algo deu errado, tente novamente mais tarde'\n        });\n      });\n    });\n\n    _this.state = {\n      neighborhood: [],\n      type: [],\n      purpose: '',\n      sendStatus: ''\n    };\n    return _this;\n  }\n\n  _createClass(PropertyManagement, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getNeighborhoodList();\n      this.getTypeList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          neighborhood = _this$state.neighborhood,\n          type = _this$state.type,\n          sendStatus = _this$state.sendStatus;\n      return __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Inserir Propriedade\"), __jsx(Select, {\n        hasLabel: true,\n        htmlFor: \"neighborhood-list\",\n        label: \"Bairro\",\n        options: neighborhood,\n        getInputValue: this.getInputValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), __jsx(Select, {\n        hasLabel: true,\n        htmlFor: \"property-type\",\n        label: \"Tipo de im\\xF3vel\",\n        options: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), __jsx(Radio, {\n        hasLabel: true,\n        htmlFor: \"radioOne\",\n        label: \"Loca\\xE7\\xE3o\",\n        name: \"purpose\",\n        value: enums.purposeOfProperty.renting,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), __jsx(Radio, {\n        hasLabel: true,\n        htmlFor: \"radioTwo\",\n        label: \"Venda\",\n        value: enums.purposeOfProperty.selling,\n        name: \"purpose\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), __jsx(Input, {\n        hasLabel: true,\n        htmlFor: \"price\",\n        label: \"Pre\\xE7o\",\n        required: true,\n        type: \"number\",\n        min: \"0\",\n        max: \"10000000000\",\n        step: \"500\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), __jsx(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        type: type || 'button',\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Cadastrar\")), sendStatus);\n    }\n  }]);\n\n  return PropertyManagement;\n}(React.Component); // const Checkbox = (props) => {\n//   const {\n//     htmlFor,\n//     label,\n//     name,\n//     required,\n//   } = props;\n//   return (\n//     <fieldset>\n//       <label\n//         htmlFor={htmlFor}\n//         label={label}\n//       >\n//         <input\n//           id={htmlFor}\n//           name={name || null}\n//           required={required || null}\n//           type=\"checkbox\"\n//         />\n//         {label}\n//       </label>\n//     </fieldset>\n//   );\n// };\n\n\nvar Label = function Label(props) {\n  var hasLabel = props.hasLabel,\n      label = props.label,\n      htmlFor = props.htmlFor;\n\n  if (hasLabel === true) {\n    return __jsx(\"label\", {\n      htmlFor: htmlFor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, label);\n  }\n\n  return null;\n};\n\nvar Input = function Input(props) {\n  var htmlFor = props.htmlFor,\n      label = props.label,\n      name = props.name,\n      required = props.required,\n      hasLabel = props.hasLabel,\n      max = props.max,\n      min = props.min,\n      placeholder = props.placeholder,\n      step = props.step,\n      type = props.type;\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, __jsx(Label, {\n    hasLabel: hasLabel,\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    id: htmlFor,\n    max: max || null,\n    min: min || null,\n    name: name || null,\n    placeholder: placeholder || null,\n    required: required || null,\n    step: step || null,\n    type: type || 'text',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }));\n};\n\nvar Radio = function Radio(props) {\n  var htmlFor = props.htmlFor,\n      label = props.label,\n      name = props.name,\n      required = props.required,\n      value = props.value;\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: htmlFor,\n    name: name || null,\n    required: required || null,\n    type: \"radio\",\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }), label));\n};\n\nvar Select = function Select(props) {\n  var hasLabel = props.hasLabel,\n      htmlFor = props.htmlFor,\n      label = props.label,\n      name = props.name,\n      required = props.required,\n      options = props.options,\n      id = props.id;\n  var arrayOptions = options.map(function (item) {\n    return item.name || item.type;\n  }); // eslint-disable-next-line max-len\n\n  var selectOptionsList = arrayOptions.map(function (option, index) {\n    return __jsx(\"option\", {\n      key: option,\n      value: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, option);\n  });\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, __jsx(Label, {\n    hasLabel: hasLabel,\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }), __jsx(\"select\", {\n    defaultValue: \"\",\n    id: htmlFor,\n    name: name || null,\n    required: required || null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, \"Escolha uma op\\xE7\\xE3o\"), selectOptionsList));\n};\n\nexport default PropertyManagement;","map":{"version":3,"sources":["/Users/lucasbertolo/Desktop/projects/portaldavila/portal/src/components/AreaUser/PropertyManagement.jsx"],"names":["React","fetch","enums","PropertyManagement","props","then","res","json","list","setState","neighborhood","sendStatus","result","type","selectBlock","document","getElementById","value","selectType","purpose","querySelector","price","method","headers","body","neighborhood_id","Number","type_id","purpose_id","creator_id","response","message","err","state","getNeighborhoodList","getTypeList","getInputValue","purposeOfProperty","renting","selling","onSubmit","Component","Label","hasLabel","label","htmlFor","Input","name","required","max","min","placeholder","step","Radio","Select","options","id","arrayOptions","map","item","selectOptionsList","option","index"],"mappings":"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","sourcesContent":["/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport fetch from 'isomorphic-fetch';\n\nimport enums from '../../enums';\n\nclass PropertyManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      neighborhood: [],\n      type: [],\n      purpose: '',\n      sendStatus: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getNeighborhoodList();\n    this.getTypeList();\n  }\n\n  getNeighborhoodList = async () => {\n    const result = await fetch('http://localhost:8000/neighborhood')\n      .then((res) => res.json())\n      .then((list) => {\n        if (list) {\n          this.setState({ neighborhood: list });\n        }\n      })\n      .catch(() => this.setState({ sendStatus: 'Erro ao encontrar lista de bairros' }));\n\n    return result;\n  }\n\n  getTypeList = async () => {\n    const result = await fetch('http://localhost:8000/typeproperty')\n      .then((res) => res.json())\n      .then((list) => {\n        if (list) {\n          this.setState({ type: list });\n        }\n      })\n      .catch(() => this.setState({ sendStatus: 'Erro ao encontrar lista de tipos' }));\n\n    return result;\n  }\n\n\n  onSubmit = () => {\n    const selectBlock = document.getElementById('neighborhood-list').value;\n    const selectType = document.getElementById('property-type').value;\n    const purpose = document.querySelector('input[name=\"purpose\"]:checked').value;\n    const price = document.getElementById('price').value;\n\n    // Validar se campos estao preenchidos\n\n    this.setState({ sendStatus: 'Enviando ...' });\n\n    fetch('https://dry-island-26655.herokuapp.com/contactLMS', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        neighborhood_id: Number(selectBlock) + 1,\n        type_id: Number(selectType) + 1,\n        purpose_id: purpose,\n        price,\n        creator_id: 1,\n      }),\n    })\n      .then((response) => response.json())\n      .then((message) => {\n        if (message) {\n          this.setState({\n            sendStatus: 'Enviada com sucesso',\n          });\n        }\n      })\n      .catch((err) => {\n        this.setState({\n          sendStatus: 'Algo deu errado, tente novamente mais tarde',\n        });\n      });\n  }\n\n\n  render() {\n    const {\n      neighborhood,\n      type,\n      sendStatus,\n    } = this.state;\n\n    return (\n      <form>\n        <h2>Inserir Propriedade</h2>\n\n\n        <Select\n          hasLabel\n          htmlFor=\"neighborhood-list\"\n          label=\"Bairro\"\n          options={neighborhood}\n          getInputValue={this.getInputValue}\n        />\n\n        <Select\n          hasLabel\n          htmlFor=\"property-type\"\n          label=\"Tipo de imóvel\"\n          options={type}\n        />\n\n        {/*\n        <Checkbox\n          hasLabel\n          htmlFor=\"checkbox\"\n          label=\"Checkbox\"\n          required\n        /> */}\n\n        <Radio\n          hasLabel\n          htmlFor=\"radioOne\"\n          label=\"Locação\"\n          name=\"purpose\"\n          value={enums.purposeOfProperty.renting}\n          required\n        />\n\n        <Radio\n          hasLabel\n          htmlFor=\"radioTwo\"\n          label=\"Venda\"\n          value={enums.purposeOfProperty.selling}\n          name=\"purpose\"\n          required\n        />\n\n        <Input\n          hasLabel\n          htmlFor=\"price\"\n          label=\"Preço\"\n          required\n          type=\"number\"\n          min=\"0\"\n          max=\"10000000000\"\n          step=\"500\"\n        />\n\n        <fieldset>\n          <button\n            type={type || 'button'}\n            onClick={this.onSubmit}\n          >\n            Cadastrar\n          </button>\n        </fieldset>\n        {sendStatus}\n\n      </form>\n    );\n  }\n}\n\n\n// const Checkbox = (props) => {\n//   const {\n//     htmlFor,\n//     label,\n//     name,\n//     required,\n//   } = props;\n\n//   return (\n//     <fieldset>\n//       <label\n//         htmlFor={htmlFor}\n//         label={label}\n//       >\n//         <input\n//           id={htmlFor}\n//           name={name || null}\n//           required={required || null}\n//           type=\"checkbox\"\n//         />\n//         {label}\n//       </label>\n//     </fieldset>\n//   );\n// };\n\nconst Label = (props) => {\n  const {\n    hasLabel,\n    label,\n    htmlFor,\n  } = props;\n\n  if (hasLabel === true) {\n    return <label htmlFor={htmlFor}>{label}</label>;\n  }\n\n  return null;\n};\n\nconst Input = (props) => {\n  const {\n    htmlFor,\n    label,\n    name,\n    required,\n    hasLabel,\n    max,\n    min,\n    placeholder,\n    step,\n    type,\n  } = props;\n\n  return (\n    <fieldset>\n      <Label\n        hasLabel={hasLabel}\n        htmlFor={htmlFor}\n        label={label}\n      />\n\n      <input\n        id={htmlFor}\n        max={max || null}\n        min={min || null}\n        name={name || null}\n        placeholder={placeholder || null}\n        required={required || null}\n        step={step || null}\n        type={type || 'text'}\n      />\n    </fieldset>\n  );\n};\n\nconst Radio = (props) => {\n  const {\n    htmlFor,\n    label,\n    name,\n    required,\n    value,\n  } = props;\n\n  return (\n    <fieldset>\n      <label\n        htmlFor={htmlFor}\n        label={label}\n      >\n        <input\n          id={htmlFor}\n          name={name || null}\n          required={required || null}\n          type=\"radio\"\n          value={value}\n        />\n        {label}\n      </label>\n    </fieldset>\n  );\n};\n\n\nconst Select = (props) => {\n  const {\n    hasLabel,\n    htmlFor,\n    label,\n    name,\n    required,\n    options,\n    id,\n  } = props;\n\n  const arrayOptions = options.map((item) => item.name || item.type);\n\n  // eslint-disable-next-line max-len\n  const selectOptionsList = arrayOptions.map((option, index) => <option key={option} value={index}>{option}</option>);\n\n  return (\n    <fieldset>\n      <Label\n        hasLabel={hasLabel}\n        htmlFor={htmlFor}\n        label={label}\n      />\n\n      <select\n        defaultValue=\"\"\n        id={htmlFor}\n        name={name || null}\n        required={required || null}\n      >\n        <option value=\"\" disabled>Escolha uma opção</option>\n\n        {selectOptionsList}\n      </select>\n    </fieldset>\n  );\n};\n\n\nexport default PropertyManagement;\n"]},"metadata":{},"sourceType":"module"}