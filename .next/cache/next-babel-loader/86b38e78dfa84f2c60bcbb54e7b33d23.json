{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/lucasbertolo/Desktop/projects/portaldavila/portal/src/components/AreaUser/PropertyManagement.jsx\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport fetch from 'isomorphic-fetch';\n\nclass PropertyManagement extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getNeighborhoodList\", async () => {\n      const result = await fetch('http://localhost:8000/neighborhood').then(res => res.json()).then(list => {\n        if (list) {\n          this.setState({\n            neighborhood: list\n          });\n        }\n      }).catch(err => console.log(err));\n      return result;\n    });\n\n    this.state = {\n      data: props.data,\n      neighborhood: []\n    };\n  }\n\n  componentDidMount() {\n    this.getNeighborhoodList();\n  }\n\n  render() {\n    const {\n      neighborhood\n    } = this.state;\n    return __jsx(\"form\", {\n      method: \"\",\n      action: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Inserir Propriedade\"), __jsx(Input, {\n      hasLabel: true,\n      htmlFor: \"textInput\",\n      label: \"Text input\",\n      required: true,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), __jsx(Input, {\n      hasLabel: true,\n      htmlFor: \"emailInput\",\n      label: \"Email input\",\n      required: true,\n      type: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), __jsx(Input, {\n      hasLabel: true,\n      htmlFor: \"numberInput\",\n      label: \"Number input\",\n      required: true,\n      type: \"number\",\n      min: \"0.5\",\n      max: \"100\",\n      step: \"0.5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), __jsx(Input, {\n      hasLabel: true,\n      htmlFor: \"passwordInput\",\n      label: \"Password input\",\n      required: true,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), __jsx(Select, {\n      hasLabel: true,\n      htmlFor: \"select\",\n      label: \"Select\",\n      options: neighborhood,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), __jsx(Datalist, {\n      hasLabel: true,\n      htmlFor: \"datalist\",\n      label: \"Datalist\",\n      options: \"Chrome, Edge, Firefox, Internet Explorer, Opera, Safari, Vivaldi\",\n      required: true,\n      keyid: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), __jsx(Textarea, {\n      hasLabel: true,\n      htmlFor: \"textarea\",\n      label: \"Textarea\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), __jsx(Checkbox, {\n      hasLabel: true,\n      htmlFor: \"checkbox\",\n      label: \"Checkbox\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), __jsx(Radio, {\n      hasLabel: true,\n      htmlFor: \"radioOne\",\n      label: \"Radio one\",\n      name: \"radios\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), __jsx(Radio, {\n      hasLabel: true,\n      htmlFor: \"radioTwo\",\n      label: \"Radio two\",\n      name: \"radios\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), __jsx(Button, {\n      type: \"submit\",\n      value: \"submit\",\n      text: \"Send form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst Button = props => {\n  const {\n    type,\n    value,\n    text\n  } = props;\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    type: type || 'button',\n    value: value || null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, text));\n};\n\nconst Datalist = props => {\n  const {\n    options,\n    hasLabel,\n    htmlFor,\n    label,\n    name,\n    required,\n    keyid\n  } = props;\n  const dataOptions = options.split(', '); // eslint-disable-next-line jsx-a11y/control-has-associated-label\n\n  const dataOptionsList = dataOptions.map((dataOption, index) => __jsx(\"option\", {\n    key: `${keyid}${index}`,\n    value: dataOption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }));\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(Label, {\n    hasLabel: hasLabel,\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    list: htmlFor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), __jsx(\"datalist\", {\n    defaultValue: \"\",\n    id: htmlFor,\n    name: name || null,\n    required: required || null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Select one option\"), dataOptionsList));\n};\n\nconst Checkbox = props => {\n  const {\n    htmlFor,\n    label,\n    name,\n    required\n  } = props;\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: htmlFor,\n    name: name || null,\n    required: required || null,\n    type: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), label));\n};\n\nconst Label = props => {\n  const {\n    hasLabel,\n    label,\n    htmlFor\n  } = props;\n\n  if (hasLabel === 'true') {\n    return __jsx(\"label\", {\n      htmlFor: htmlFor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, label);\n  }\n\n  return null;\n};\n\nconst Input = props => {\n  const {\n    htmlFor,\n    label,\n    name,\n    required,\n    hasLabel,\n    max,\n    min,\n    placeholder,\n    step,\n    type\n  } = props;\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, __jsx(Label, {\n    hasLabel: hasLabel,\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    id: htmlFor,\n    max: max || null,\n    min: min || null,\n    name: name || null,\n    placeholder: placeholder || null,\n    required: required || null,\n    step: step || null,\n    type: type || 'text',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }));\n};\n\nconst Radio = props => {\n  const {\n    htmlFor,\n    label,\n    name,\n    required\n  } = props;\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    id: htmlFor,\n    name: name || null,\n    required: required || null,\n    type: \"radio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }), label));\n};\n\nconst Select = props => {\n  const {\n    hasLabel,\n    htmlFor,\n    label,\n    name,\n    required,\n    options\n  } = props;\n  const arrayOptions = options.map(item => item.name); // eslint-disable-next-line max-len\n\n  const selectOptionsList = arrayOptions.map((option, index) => __jsx(\"option\", {\n    key: option,\n    value: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, option));\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, __jsx(Label, {\n    hasLabel: hasLabel,\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }), __jsx(\"select\", {\n    defaultValue: \"\",\n    id: htmlFor,\n    name: name || null,\n    required: required || null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, \"Escolha um bairro\"), selectOptionsList));\n};\n\nconst Textarea = props => {\n  const {\n    hasLabel,\n    htmlFor,\n    label,\n    cols,\n    name,\n    required,\n    rows\n  } = props;\n  return __jsx(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, __jsx(Label, {\n    hasLabel: hasLabel,\n    htmlFor: htmlFor,\n    label: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }), __jsx(\"textarea\", {\n    cols: cols || null,\n    id: htmlFor,\n    name: name || null,\n    required: required || null,\n    rows: rows || null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }));\n};\n\nexport default PropertyManagement;","map":{"version":3,"sources":["/Users/lucasbertolo/Desktop/projects/portaldavila/portal/src/components/AreaUser/PropertyManagement.jsx"],"names":["React","fetch","PropertyManagement","Component","constructor","props","result","then","res","json","list","setState","neighborhood","catch","err","console","log","state","data","componentDidMount","getNeighborhoodList","render","Button","type","value","text","Datalist","options","hasLabel","htmlFor","label","name","required","keyid","dataOptions","split","dataOptionsList","map","dataOption","index","Checkbox","Label","Input","max","min","placeholder","step","Radio","Select","arrayOptions","item","selectOptionsList","option","Textarea","cols","rows"],"mappings":"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","sourcesContent":["/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport fetch from 'isomorphic-fetch';\n\nclass PropertyManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.data,\n      neighborhood: [],\n    };\n  }\n\n\n  componentDidMount() {\n    this.getNeighborhoodList();\n  }\n\n  getNeighborhoodList = async () => {\n    const result = await fetch('http://localhost:8000/neighborhood')\n      .then((res) => res.json())\n      .then((list) => {\n        if (list) {\n          this.setState({ neighborhood: list });\n        }\n      })\n      .catch((err) => console.log(err));\n\n    return result;\n  }\n\n  render() {\n    const {\n      neighborhood,\n    } = this.state;\n\n    return (\n      <form method=\"\" action=\"\">\n        <h2>Inserir Propriedade</h2>\n        <Input\n          hasLabel\n          htmlFor=\"textInput\"\n          label=\"Text input\"\n          required\n          type=\"text\"\n        />\n\n        <Input\n          hasLabel\n          htmlFor=\"emailInput\"\n          label=\"Email input\"\n          required\n          type=\"email\"\n        />\n\n        <Input\n          hasLabel\n          htmlFor=\"numberInput\"\n          label=\"Number input\"\n          required\n          type=\"number\"\n          min=\"0.5\"\n          max=\"100\"\n          step=\"0.5\"\n        />\n\n        <Input\n          hasLabel\n          htmlFor=\"passwordInput\"\n          label=\"Password input\"\n          required\n          type=\"password\"\n        />\n        <Select\n          hasLabel\n          htmlFor=\"select\"\n          label=\"Select\"\n          options={neighborhood}\n        />\n\n        <Datalist\n          hasLabel\n          htmlFor=\"datalist\"\n          label=\"Datalist\"\n          options=\"Chrome, Edge, Firefox, Internet Explorer, Opera, Safari, Vivaldi\"\n          required\n          keyid=\"id\"\n        />\n\n        <Textarea\n          hasLabel\n          htmlFor=\"textarea\"\n          label=\"Textarea\"\n          required\n        />\n\n        <Checkbox\n          hasLabel\n          htmlFor=\"checkbox\"\n          label=\"Checkbox\"\n          required\n        />\n\n        <Radio\n          hasLabel\n          htmlFor=\"radioOne\"\n          label=\"Radio one\"\n          name=\"radios\"\n          required\n        />\n\n        <Radio\n          hasLabel\n          htmlFor=\"radioTwo\"\n          label=\"Radio two\"\n          name=\"radios\"\n          required\n        />\n\n        <Button\n          type=\"submit\"\n          value=\"submit\"\n          text=\"Send form\"\n        />\n      </form>\n    );\n  }\n}\n\nconst Button = (props) => {\n  const {\n    type,\n    value,\n    text,\n  } = props;\n\n  return (\n    <fieldset>\n      <button\n        type={type || 'button'}\n        value={value || null}\n      >\n        {text}\n      </button>\n    </fieldset>\n  );\n};\n\nconst Datalist = (props) => {\n  const {\n    options,\n    hasLabel,\n    htmlFor,\n    label,\n    name,\n    required,\n    keyid,\n  } = props;\n\n  const dataOptions = options.split(', ');\n\n  // eslint-disable-next-line jsx-a11y/control-has-associated-label\n  const dataOptionsList = dataOptions.map((dataOption, index) => <option key={`${keyid}${index}`} value={dataOption} />);\n\n  return (\n    <fieldset>\n      <Label\n        hasLabel={hasLabel}\n        htmlFor={htmlFor}\n        label={label}\n      />\n\n      <input list={htmlFor} />\n\n      <datalist\n        defaultValue=\"\"\n        id={htmlFor}\n        name={name || null}\n        required={required || null}\n      >\n        <option value=\"\" disabled>Select one option</option>\n\n        {dataOptionsList}\n      </datalist>\n    </fieldset>\n  );\n};\n\nconst Checkbox = (props) => {\n  const {\n    htmlFor,\n    label,\n    name,\n    required,\n  } = props;\n\n  return (\n    <fieldset>\n      <label\n        htmlFor={htmlFor}\n        label={label}\n      >\n        <input\n          id={htmlFor}\n          name={name || null}\n          required={required || null}\n          type=\"checkbox\"\n        />\n        {label}\n      </label>\n    </fieldset>\n  );\n};\n\nconst Label = (props) => {\n  const {\n    hasLabel,\n    label,\n    htmlFor,\n  } = props;\n\n  if (hasLabel === 'true') {\n    return <label htmlFor={htmlFor}>{label}</label>;\n  }\n\n  return null;\n};\n\nconst Input = (props) => {\n  const {\n    htmlFor,\n    label,\n    name,\n    required,\n    hasLabel,\n    max,\n    min,\n    placeholder,\n    step,\n    type,\n  } = props;\n\n  return (\n    <fieldset>\n      <Label\n        hasLabel={hasLabel}\n        htmlFor={htmlFor}\n        label={label}\n      />\n\n      <input\n        id={htmlFor}\n        max={max || null}\n        min={min || null}\n        name={name || null}\n        placeholder={placeholder || null}\n        required={required || null}\n        step={step || null}\n        type={type || 'text'}\n      />\n    </fieldset>\n  );\n};\n\nconst Radio = (props) => {\n  const {\n    htmlFor,\n    label,\n    name,\n    required,\n  } = props;\n\n  return (\n    <fieldset>\n      <label\n        htmlFor={htmlFor}\n        label={label}\n      >\n        <input\n          id={htmlFor}\n          name={name || null}\n          required={required || null}\n          type=\"radio\"\n        />\n        {label}\n      </label>\n    </fieldset>\n  );\n};\n\n\nconst Select = (props) => {\n  const {\n    hasLabel,\n    htmlFor,\n    label,\n    name,\n    required,\n    options,\n  } = props;\n\n  const arrayOptions = options.map((item) => item.name);\n\n  // eslint-disable-next-line max-len\n  const selectOptionsList = arrayOptions.map((option, index) => <option key={option} value={index}>{option}</option>);\n\n  return (\n    <fieldset>\n      <Label\n        hasLabel={hasLabel}\n        htmlFor={htmlFor}\n        label={label}\n      />\n\n      <select\n        defaultValue=\"\"\n        id={htmlFor}\n        name={name || null}\n        required={required || null}\n      >\n        <option value=\"\" disabled>Escolha um bairro</option>\n\n        {selectOptionsList}\n      </select>\n    </fieldset>\n  );\n};\n\nconst Textarea = (props) => {\n  const {\n    hasLabel,\n    htmlFor,\n    label,\n    cols,\n    name,\n    required,\n    rows,\n  } = props;\n\n  return (\n    <fieldset>\n      <Label\n        hasLabel={hasLabel}\n        htmlFor={htmlFor}\n        label={label}\n      />\n\n      <textarea\n        cols={cols || null}\n        id={htmlFor}\n        name={name || null}\n        required={required || null}\n        rows={rows || null}\n      />\n    </fieldset>\n  );\n};\n\n\nexport default PropertyManagement;\n"]},"metadata":{},"sourceType":"module"}